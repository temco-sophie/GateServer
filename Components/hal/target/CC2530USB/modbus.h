#if defined ( MODBUS_SUPPLY)

#ifndef MODBUS_H
#define MODBUS_H
/*********************************************************************
* INCLUDE
 */
#include "hal_types.h"

/*********************************************************************
* CONTANTS
 */
#define CRC_NO  0
#define CRC_YES 1

#define MODBUS_SINGLE_READ      0x03
#define MODBUS_SINGLE_WRITE     0x06
#define MODBUS_MULTI_WRITE      0x10
/*********************************************************************
 * GLOBAL VARIABLES
 */
extern uint8 CRClo, CRChi;
extern uint8 modbus_id;
extern uint16 modbus_jump_height ;
extern uint16 modbus_jump_record ;
extern bool restroe_factory_setting;
/*********************************************************************
 * GLOBAL FUNCTIONS
 */
extern void modbus_uart_data_process( uint8 *data_buffer, uint8 len);
extern void initCRC16( void);
extern void CRC16_byte( uint8 ch);
/*********************************************************************
 * LOCAL VARIABLES
 */
enum {
  MODBUS_SERIALNUMBER_LOWORD  = 0,             
  MODBUS_SERIALNUMBER_HIWORD  = 2,
  MODBUS_FIRMWARE_VERSION_NUMBER_LO = 4,
  MODBUS_FIRMWARE_VERSION_NUMBER_HI,
  MODBUS_ADDRESS                = 6,
  MODBUS_HARDWARE_REV,
  
  MODBUS_SYS_HOUR,
  MODBUS_SYS_MINUTES,
  MODBUS_SYS_SECONDS,
  MODBUS_SYS_MONTH,
  MODBUS_SYS_DAY,
  MODBUS_SYS_YEAR,
  
  MODBUS_SYS_RESTORE = 14,
  
  MODBUS_PANID = 21,
  
  MODBUS_DEVICE_ID  = 22,
  MODBUS_GROUP_ID,
  MODBUS_JOB_ID,
  MODBUS_USER_ID,
  
  MODBUS_CHARGING_STAT,
  MODBUS_LEFT_QUANTITY,
  MODBUS_LEFT_HOURS,
#if defined ( JUMP_MACHINE_DONGLE)
  MODBUS_JUMP_HEIGHT,
  MODBUS_JUMP_RECORD,
#endif
  MODBUS_GATE_NUMS,
  MODBUS_GATE_ADDRESS_1,
  MODBUS_GATE_ADDRESS_2,
  MODBUS_GATE_ADDRESS_3,
  MODBUS_GATE_ADDRESS_4,
  MODBUS_GATE_ADDRESS_5,
  MODBUS_GATE_ADDRESS_6,
  MODBUS_GATE_ADDRESS_7,
  MODBUS_GATE_ADDRESS_8,
  MODBUS_GATE_ADDRESS_9,
  MODBUS_GATE_ADDRESS_10,
#if 0  
  MODBUS_GATE_TIME_1_HI,
  MODBUS_GATE_TIME_1_LO,
  MODBUS_GATE_TIME_2_HI,
  MODBUS_GATE_TIME_2_LO,  
  MODBUS_GATE_TIME_3_HI,
  MODBUS_GATE_TIME_3_LO,  
  MODBUS_GATE_TIME_4_HI,
  MODBUS_GATE_TIME_4_LO,
#endif
  MODBUS_GATE_TIME_1_SEC,
//  MODBUS_GATE_TIME_1_MILLISEC,
  MODBUS_GATE_TIME_1_MICROSEC,
  MODBUS_GATE_TIME_2_SEC,
//  MODBUS_GATE_TIME_2_MILLISEC,
  MODBUS_GATE_TIME_2_MICROSEC,
  MODBUS_GATE_TIME_3_SEC,
//  MODBUS_GATE_TIME_3_MILLISEC,
  MODBUS_GATE_TIME_3_MICROSEC,
  MODBUS_GATE_TIME_4_SEC,
//  MODBUS_GATE_TIME_4_MILLISEC,
  MODBUS_GATE_TIME_4_MICROSEC,
  
  MODBUS_GATE_TIME_RESULT_SEC,
//  MODBUS_GATE_TIME_RESULT_MILLISEC,
  MODBUS_GATE_TIME_RESULT_MICROSEC,
  
  MODBUS_GATE_NAME_1_HI,
  MODBUS_GATE_NAME_1_LO,  
  MODBUS_GATE_RFID_1_HI,
  MODBUS_GATE_RFID_1_LO,
  /*
  MODBUS_GATE_NAME_2_HI,
  MODBUS_GATE_NAME_2_LO,
  MODBUS_GATE_NAME_3_HI,
  MODBUS_GATE_NAME_3_LO,
  MODBUS_GATE_NAME_4_HI,
  MODBUS_GATE_NAME_4_LO,

  MODBUS_GATE_RFID_2_HI,
  MODBUS_GATE_RFID_2_LO,
  MODBUS_GATE_RFID_3_HI,
  MODBUS_GATE_RFID_3_LO,
  MODBUS_GATE_RFID_4_HI,
  MODBUS_GATE_RFID_4_LO,
  */
  
  MODBUS_GATE_BOARD_HEIGHT_1,
  MODBUS_GATE_USER_STAT_1,
  MODBUS_GATE_CHALLENGE_HEIGHT_1,
  MODBUS_GATE_MODE_SELECTION_1
};

	



#endif // MODBUS_H

#endif // MODBUS_SUPPLY